@model MyProjectsViewModel

@{
	ViewBag.Title = "My Projects";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.TotalProjectsCount / MyProjectsViewModel.HousesPerPage);
}

@{
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Projects.Any();
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mb-5 mt-5">
        <li class="page-item disabled">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-area=""
               asp-controller="Project"
               asp-action="Mine"
               asp-route-currentPage="@previousPage"><<</a>
        </li>
        @for (int i = 1; i <= maxPage; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : string.Empty)" aria-current="page">
                <a class="page-link" href="#">@i</a>
            </li>
        }
        <li class="page-item">
            <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-area=""
               asp-controller="Project"
               asp-action="Mine"
               asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
        </li>
    </ul>
</nav>

@if (!Model.Projects.Any())
{
    <h2 class="text-center">You have no projects yet!</h2>
}

<div class="row">
    @foreach (var project in Model.Projects)
    {
        <partial name="_ProjectPartial" model="@project" />
    }
</div>